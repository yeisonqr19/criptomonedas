{"version":3,"sources":["cryptomonedas.png","helpers/monedas.js","hooks/useMoneda.jsx","hooks/useCriptoMonedas.jsx","components/Error.jsx","components/Form.jsx","hooks/useAxios.jsx","components/Cotizacion.jsx","components/Spinner.jsx","App.jsx","index.js"],"names":["opcionesMonedas","codigo","nombre","Label","styled","label","Select","select","MensajeError","p","Error","mensaje","Boton","button","Form","setMoneda","setCriptoMoneda","useState","listaCripto","setListCripto","error","setError","initialState","moneda","onChange","target","value","map","opcion","useMoneda","SelectMonedas","criptoMoneda","cripto","CoinInfo","Name","FullName","Id","useCriptoMonedas","SeleccionarCripto","data","url","isMounted","useRef","useEffect","current","loading","state","setState","a","axios","get","useAxios","Data","onSubmit","e","preventDefault","setTimeout","lista","type","ResultadoDiv","div","Info","Precio","Cotizacion","resultado","Object","keys","length","PRICE","HIGHDAY","LOWDAY","CHANGE24HOUR","LASTUPDATE","Spinner","className","Contenedor","Imagen","img","Heading","h1","App","setResultado","cargando","setCargando","encodeURI","DISPLAY","Componente","src","imagen","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97a0f104.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptomonedas.51f1d2ed.png\";","export const opcionesMonedas = [\n  {\n    codigo: \"USD\",\n    nombre: \"Dolar estadounidense\",\n  },\n  {\n    codigo: \"COP\",\n    nombre: \"Peso Colombiano\",\n  },\n  {\n    codigo: \"EUR\",\n    nombre: \"Euro\",\n  },\n  {\n    codigo: \"MXN\",\n    nombre: \"Peso Mexicano\",\n  },\n  {\n    codigo: \"GBP\",\n    nombre: \"Libra Esterlina\",\n  },\n\n  {\n    codigo: \"NZD\",\n    nombre: \"Dolar Neozelandes\",\n  },\n];\n","import React, { useState } from \"react\";\nimport { opcionesMonedas } from \"../helpers/monedas\";\nimport styled from \"@emotion/styled\";\n\nconst Label = styled.label`\n  font-family: \"Bebas Neue\", cursive;\n  color: #fff;\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 2.4rem;\n  margin-top: -1.2rem;\n  display: block;\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  display: block;\n  padding: 1rem;\n  -webkit-appearance: none;\n  border-radius: 10px;\n  border: none;\n  font-size: 1.2rem;\n`;\n\nexport const useMoneda = (label, initialState) => {\n  const [moneda, setMoneda] = useState(initialState);\n\n  const seleccionar = () => (\n    <>\n      <Label>{label}</Label>\n      <Select onChange={({ target }) => setMoneda(target.value)} value={moneda}>\n        <option value=\"\"> --Seleccione-- </option>\n        {opcionesMonedas.map((opcion) => (\n          <option key={opcion.codigo} value={opcion.codigo}>\n            {opcion.nombre}\n          </option>\n        ))}\n      </Select>\n    </>\n  );\n\n  return [moneda, seleccionar, setMoneda];\n};\n","import React, { useState } from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nconst Label = styled.label`\n  font-family: \"Bebas Neue\", cursive;\n  color: #fff;\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 2.4rem;\n  margin-top: 1.8rem;\n  display: block;\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  display: block;\n  padding: 1rem;\n  -webkit-appearance: none;\n  border-radius: 10px;\n  border: none;\n  font-size: 1.2rem;\n`;\n\nexport const useCriptoMonedas = (label, initialState, listaCripto) => {\n  const [criptoMoneda, setCriptoMoneda] = useState(initialState);\n\n  const seleccionarCripto = () => (\n    <>\n      <Label>{label}</Label>\n      <Select\n        onChange={({ target }) => setCriptoMoneda(target.value)}\n        value={criptoMoneda}\n      >\n        <option value=\"\">--- Seleccione ---</option>\n        {listaCripto.map((cripto) => (\n          <option key={cripto.CoinInfo.Id} value={cripto.CoinInfo.Name}>\n            {cripto.CoinInfo.FullName}\n          </option>\n        ))}\n      </Select>\n    </>\n  );\n\n  return [criptoMoneda, seleccionarCripto, setCriptoMoneda];\n};\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst MensajeError = styled.p`\n  background-color: #b7322c;\n  padding: 1rem;\n  color: #fff;\n  font-size: 30px;\n  text-transform: uppercase;\n  font-weight: bold;\n  text-align: center;\n  font-family: \"Bebas Neue\", cursive;\n`;\n\nexport const Error = ({ mensaje }) => {\n  return <MensajeError>{mensaje}</MensajeError>;\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useMoneda } from \"../hooks/useMoneda\";\nimport { useCriptoMonedas } from \"../hooks/useCriptoMonedas\";\nimport { Error } from \"./Error\";\nimport { useAxios } from \"../hooks/useAxios\";\n\nconst Boton = styled.button`\n  margin-top: 20px;\n  font-weight: bold;\n  font-size: 20px;\n  padding: 10px;\n  background-color: #66a2fe;\n  border: none;\n  width: 100%;\n  border-radius: 10px;\n  color: #fff;\n  transition: all 0.3s ease-in-out;\n  &:hover {\n    background-color: #326ac0;\n    cursor: pointer;\n    transform: scale(1.02);\n  }\n`;\n\nexport const Form = ({ setMoneda, setCriptoMoneda }) => {\n  const [listaCripto, setListCripto] = useState([]);\n\n  const [error, setError] = useState(false);\n\n  const [moneda, SelectMonedas] = useMoneda(\"Elige tu Moneda\", \"\");\n\n  const [criptoMoneda, SeleccionarCripto] = useCriptoMonedas(\n    \"Elige tu CriptoMoneda\",\n    \"\",\n    listaCripto\n  );\n\n  const url = `https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD`;\n\n  const { data } = useAxios(url);\n\n  useEffect(() => {\n    if (data !== null) {\n      const { Data } = data;\n      setListCripto(Data);\n    }\n  }, [data]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (moneda === \"\" || criptoMoneda === \"\") {\n      setError(true);\n\n      setTimeout(() => {\n        setError(false);\n      }, 3000);\n\n      return;\n    }\n\n    setError(false);\n    setMoneda(moneda);\n    setCriptoMoneda(criptoMoneda);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {error && <Error mensaje=\"Todos los Campos son Obligatorios\" />}\n\n      <SelectMonedas />\n      <SeleccionarCripto lista />\n\n      <Boton type=\"submit\" value=\"calcular\">\n        Calcular\n      </Boton>\n    </form>\n  );\n};\n","import { useRef, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport const useAxios = (url) => {\n  const isMounted = useRef(true);\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  const [state, setState] = useState({\n    data: null,\n    loading: true,\n  });\n\n  useEffect(() => {\n    setState({\n      data: null,\n      loading: true,\n    });\n    (async () => {\n      const { data } = await axios.get(url);\n      if (isMounted.current) {\n        setState({\n          data: data,\n          loading: false,\n        });\n      }\n      isMounted.current = false;\n    })();\n  }, [url]);\n\n  return state;\n};\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst ResultadoDiv = styled.div`\n  color: #fff;\n  font-family: \"Franklin Gothic Medium\", \"Arial Narrow\", Arial, sans-serif;\n`;\n\nconst Info = styled.p`\n  font-size: 18px;\n  span {\n    font-weight: bold;\n  }\n`;\n\nconst Precio = styled.p`\n  font-size: 30px;\n  span {\n    font-weight: bold;\n  }\n`;\n\nexport const Cotizacion = ({ resultado }) => {\n  if (Object.keys(resultado).length === 0) {\n    return null;\n  }\n\n  return (\n    <ResultadoDiv>\n      <Precio>\n        El Precio es: <span>{resultado.PRICE}</span>\n      </Precio>\n      <Info>\n        Precio mas Alto del Dia: <span>{resultado.HIGHDAY}</span>\n      </Info>\n      <Info>\n        Precio mas Bajo del Dia: <span>{resultado.LOWDAY}</span>\n      </Info>\n      <Info>\n        Variacion De las Ultimas 24 Horas: <span>{resultado.CHANGE24HOUR}</span>\n      </Info>\n      <Info>\n        Ultima Actualizacion: <span>{resultado.LASTUPDATE}</span>\n      </Info>\n    </ResultadoDiv>\n  );\n};\n","import React from \"react\";\nimport \"./spinnerStyles.css\";\n\nexport const Spinner = () => (\n  <div className=\"sk-chase\">\n    <div className=\"sk-chase-dot\"></div>\n    <div className=\"sk-chase-dot\"></div>\n    <div className=\"sk-chase-dot\"></div>\n    <div className=\"sk-chase-dot\"></div>\n    <div className=\"sk-chase-dot\"></div>\n    <div className=\"sk-chase-dot\"></div>\n  </div>\n);\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport imagen from \"./cryptomonedas.png\";\nimport { Form } from \"./components/Form\";\nimport axios from \"axios\";\nimport { Cotizacion } from \"./components/Cotizacion\";\nimport { Spinner } from \"./components/Spinner\";\n\nconst Contenedor = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  @media (min-width: 992px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    column-gap: 2rem;\n  }\n`;\n\nconst Imagen = styled.img`\n  max-width: 100%;\n  margin-top: 5rem;\n`;\n\nconst Heading = styled.h1`\n  font-family: \"Bebas Neue\", cursive;\n  color: #fff;\n  text-align: left;\n  font-weight: 700;\n  font-size: 50px;\n  margin: 80px 0px 50px 0px;\n\n  &::after {\n    content: \"\";\n    width: 100px;\n    height: 6px;\n    background-color: #66a2fe;\n    display: block;\n  }\n`;\n\nfunction App() {\n  const [moneda, setMoneda] = useState(\"\");\n  const [criptoMoneda, setCriptoMoneda] = useState(\"\");\n  const [resultado, setResultado] = useState({});\n  const [cargando, setCargando] = useState(false);\n\n  useEffect(() => {\n    if (moneda === \"\" || criptoMoneda === \"\") return;\n\n    (async () => {\n      const apiKey =\n        \"1010fd0f42f02ee30c384d575fda0098cb5e352c16b4e09a77cafac74c14b31e\";\n      const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${encodeURI(\n        criptoMoneda\n      )}&tsyms=${encodeURI(moneda)}&api_key=${apiKey}`;\n\n      const { data } = await axios.get(url);\n      setCargando(true);\n\n      setTimeout(() => {\n        setCargando(false);\n        setResultado(data.DISPLAY[criptoMoneda][moneda]);\n      }, 2500);\n    })();\n  }, [moneda, criptoMoneda]);\n\n  const Componente = cargando ? (\n    <Spinner />\n  ) : (\n    <Cotizacion resultado={resultado} />\n  );\n\n  return (\n    <Contenedor>\n      <div>\n        <Imagen src={imagen} alt=\"Imagen Cripto\" />\n      </div>\n      <div>\n        <Heading>Cotiza CriptoMonedas al instante</Heading>\n        <Form setMoneda={setMoneda} setCriptoMoneda={setCriptoMoneda} />\n        {Componente}\n      </div>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}